package framePkg;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.stream.Stream;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class DeleteTrainingProgramPanel extends javax.swing.JPanel {
 FileReader fr = null;
 FileWriter fw = null;
 BufferedWriter bw=null;
              BufferedReader br = null;
               String s=null;
               ArrayList <String> id = new ArrayList();
               ArrayList <String> inst = new ArrayList();
               ArrayList <String> courseD = new ArrayList();
               ArrayList <String> list = new ArrayList();
               String select = "";
    /**
     * Creates new form DeleteTrainingProgram
     */
    public DeleteTrainingProgramPanel() {
        initComponents();
    selectBtn.setVisible(false);
    }

    private void load(){  
      File f = new File("Training.txt");
         
         if(f.exists()){
             selectBtn.setVisible(true);
          try {
               fr = new FileReader("Training.txt");
              br = new BufferedReader(fr);
             
              while ((s = br.readLine()) != null){
                  list.add(s);

                String words[] = s.split(",");
                id.add(words[0]);
                inst.add(words[4]);
                courseD.add(words[5]);
                  courseIDcombo.addItem(words[0]);
                  
                  }  
              
          } catch (IOException ex) {
              //Logger.getLogger(AddTrainingProgramPanel.class.getName()).log(Level.SEVERE, null, ex);
          }
          finally{
              try {
                  br.close();
              } catch (IOException ex) {
                  Logger.getLogger(DeleteTrainingProgramPanel.class.getName()).log(Level.SEVERE, null, ex);
              }
          
          }
        }
         else{
         selectBtn.setVisible(false);
         
         }
         
         
        
    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        deleteBtn = new javax.swing.JButton();
        confirmdeleteCheckBox = new javax.swing.JCheckBox();
        courseIDcombo = new javax.swing.JComboBox<>();
        instructorNameLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        courseDetailsLabel = new javax.swing.JLabel();
        selectBtn = new javax.swing.JButton();
        loadBtn = new javax.swing.JButton();

        jLabel1.setText("Course ID:");

        jLabel2.setText("Instructor:");

        deleteBtn.setText("Delete");
        deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBtnActionPerformed(evt);
            }
        });

        confirmdeleteCheckBox.setText("Confirm Deletion");

        jLabel4.setText("Course Details");

        selectBtn.setText("Select");
        selectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectBtnActionPerformed(evt);
            }
        });

        loadBtn.setText("LOAD");
        loadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(courseIDcombo, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(selectBtn))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(instructorNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 157, Short.MAX_VALUE)
                                    .addComponent(courseDetailsLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(confirmdeleteCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(loadBtn)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(loadBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(courseIDcombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectBtn))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(instructorNameLabel))
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(courseDetailsLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addComponent(confirmdeleteCheckBox)
                .addGap(18, 18, 18)
                .addComponent(deleteBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void selectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectBtnActionPerformed
        // TODO add your handling code here:
          select = courseIDcombo.getSelectedItem().toString();
         if(id.contains(select)){
            int num = id.indexOf(select);
          
         instructorNameLabel.setText(inst.get(num));
         courseDetailsLabel.setText(courseD.get(num));
         
         }
         else{
            instructorNameLabel.setText("not Found");
         courseDetailsLabel.setText("not Found");
         
         }
        
        
    }//GEN-LAST:event_selectBtnActionPerformed

    private void deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBtnActionPerformed
    //String currentLine ="";
        try {
         // TODO add your handling code here:
         fw = new FileWriter("Training.txt");
     } catch (IOException ex) {
         Logger.getLogger(DeleteTrainingProgramPanel.class.getName()).log(Level.SEVERE, null, ex);
     }
     bw = new BufferedWriter(fw);
        if(confirmdeleteCheckBox.isSelected()){
//            try {
//                fr = new FileReader("Training.txt");
//            } catch (FileNotFoundException ex) {
//                Logger.getLogger(DeleteTrainingProgramPanel.class.getName()).log(Level.SEVERE, null, ex);
//            }
//              br = new BufferedReader(fr);
//             //String fileName = "Training.txt";
//        String n = null;
//             try {
//            while ((s = br.readLine()) != null){
//                if(s.contains(courseIDcombo.getSelectedItem().toString())){
//                  
//                }
//                
//                
//            }
//            bw.write(n);
//        } catch (IOException ex) {
//            Logger.getLogger(DeleteTrainingProgramPanel.class.getName()).log(Level.SEVERE, null, ex);
//        }
//             
//             try {
//                br.close();
//                bw.close();
//              
//            }catch (IOException ex) {
//                Logger.getLogger(DeleteTrainingProgramPanel.class.getName()).log(Level.SEVERE, null, ex);
//            }
//
//        
int delete = id.indexOf(courseIDcombo.getSelectedItem().toString());
list.remove(delete);
id.remove(delete);
inst.remove(delete);
courseD.remove(delete);
try{
for(String s: list){
bw.write(s+"\n");

}

courseIDcombo.removeItem(courseIDcombo.getSelectedItem());
instructorNameLabel.setText("");
courseDetailsLabel.setText("");
  JOptionPane.showMessageDialog(null,"Training Program deleted Successfully ");
bw.close();
}catch(Exception e){}




        }
        else{
                JOptionPane.showMessageDialog(null,"Plz confirm ");

                //JOptionPane.showMessageDialog(null,"No Training Programs were generated Select the Add Training program to generate");

        }
        
        
        
    }//GEN-LAST:event_deleteBtnActionPerformed

    private void loadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadBtnActionPerformed
        // TODO add your handling code here:
        load();
    }//GEN-LAST:event_loadBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox confirmdeleteCheckBox;
    private javax.swing.JLabel courseDetailsLabel;
    private javax.swing.JComboBox<String> courseIDcombo;
    private javax.swing.JButton deleteBtn;
    private javax.swing.JLabel instructorNameLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton loadBtn;
    private javax.swing.JButton selectBtn;
    // End of variables declaration//GEN-END:variables
}
