package framePkg;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class AddTrainingProgramPanel extends javax.swing.JPanel {
    FileWriter fw=null;
    BufferedWriter bw=null;
    String l=null;
    FileReader fr=null;
    BufferedReader br=null;
    String s=null;
    String n="";

    /**
     * Creates new form AddTrainingProgramPanel
     */
    public AddTrainingProgramPanel() {
        initComponents();
    }

     
    private boolean id_search(String id){
      File f = new File("Training.txt");
         
         if(f.exists()){
          try {
              fr = new FileReader("Training.txt");
              br = new BufferedReader(fr);
              while ((s = br.readLine()) != null){
                  
                  if(s.contains(id)){
                        // JOptionPane.showMessageDialog(null,"ID exist plz check ");
                String words[] = s.split(",");
                    n=words[0];
                  }
                  
              }
          } catch (IOException ex) {
              //Logger.getLogger(AddTrainingProgramPanel.class.getName()).log(Level.SEVERE, null, ex);
          }
          finally{
              try {
                  br.close();
              } catch (IOException ex) {
                  Logger.getLogger(AddTrainingProgramPanel.class.getName()).log(Level.SEVERE, null, ex);
              }
          
          }
        }
        if(n.equals(id)){
             return false;
        }
         
         else{
       return true;
         }
    
    
    }
   
    private boolean course_name(String name){
            if(name.equals("") || name.contains(",")){
     
        return false;
            }
            else{
            return true;
            }
            
            
            
};
    private boolean course_id(String id){
         if(id.equals("") || id.contains(",")){
      
        return false;
        }
         else{
        
        return true;}
};
    private boolean courseInstructor(String instructor){
         if(instructor.equals("") || instructor.contains(",")){
             return false;
        }
         else{
        return true;}
};
    private boolean course_detail(String details){
        if(details.equals("") || details.contains(",")){
            return false;
        }
        else{
        return true;}
};
       private boolean course_capacity(String details){
        if(details.equals("") || details.contains(",")){
            return false;
        }
        else{
        return true;}
};
   
    private void name_id_instructor_details(String id, String name, String combo, String capacity, String instructor,String details)
    {
        FileWriter fw=null;
        BufferedWriter bw = null;
        String l =null;
    try {
            
            fw = new FileWriter("Training.txt",true);
        } catch (IOException ex) {
            Logger.getLogger(AddTrainingProgramPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
             bw = new BufferedWriter(fw);
        l = id+","+name+","+combo+","+capacity+","+instructor+","+details;
        
             try {
                 bw.write(l);
                  bw.write("\n");
             } catch (IOException ex) {
                 Logger.getLogger(AddTrainingProgramPanel.class.getName()).log(Level.SEVERE, null, ex);
             }
       
        finally{
            try {
                bw.close();
            } catch (IOException ex) {
                Logger.getLogger(AddTrainingProgramPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
             
             }
     
    };
    
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        courseNameTxt = new javax.swing.JTextField();
        trainingCombo = new javax.swing.JComboBox<>();
        capacityTxt = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        coursedetilTxt = new javax.swing.JTextArea();
        InstructorTxt = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        courseIdTxt = new javax.swing.JTextField();
        addBtn = new javax.swing.JButton();

        jLabel1.setText("Course Name:");

        jLabel2.setText("Course Type:");

        jLabel3.setText("Capacity:");

        jLabel4.setText("Instructor:");

        jLabel5.setText("Course Detail:");

        trainingCombo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Weapon Training", "Management Training" }));

        coursedetilTxt.setColumns(20);
        coursedetilTxt.setRows(5);
        jScrollPane1.setViewportView(coursedetilTxt);

        jLabel6.setText("Course ID:");

        addBtn.setText("Add");
        addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel3)
                                    .addGap(36, 36, 36))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jLabel4)
                                    .addGap(36, 36, 36)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(InstructorTxt, javax.swing.GroupLayout.DEFAULT_SIZE, 256, Short.MAX_VALUE)
                                .addComponent(capacityTxt)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel6)
                                .addComponent(jLabel2))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(trainingCombo, 0, 258, Short.MAX_VALUE)
                                .addComponent(courseIdTxt)
                                .addComponent(courseNameTxt))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(41, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(courseNameTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(courseIdTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(trainingCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(capacityTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(InstructorTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(addBtn)
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addBtnActionPerformed
      // AddTrainingProgram c = new AddTrainingProgram();
         
        if(!course_name(courseNameTxt.getText())){
        JOptionPane.showMessageDialog(null,"Course Name cannot be blank or uncorrect");
        }
        else if(!course_id(courseIdTxt.getText())){
        JOptionPane.showMessageDialog(null,"ID cannot be blank or incorrect ");
        }
       
        else if(!course_capacity(capacityTxt.getText())){
        JOptionPane.showMessageDialog(null," capacity cannot be blank or incorrect");
        }
        else if(!courseInstructor(InstructorTxt.getText())){
        JOptionPane.showMessageDialog(null,"Instructor ID cannot be blank or incorrect");
        }
        else if(!course_detail(coursedetilTxt.getText())){
        JOptionPane.showMessageDialog(null,"Course Detail cannot be blank or incorrect");
        }
         else if(!id_search(courseIdTxt.getText())){
        JOptionPane.showMessageDialog(null,"id is already used plz change");
        }
        
        else{
      
        name_id_instructor_details(courseIdTxt.getText(), courseNameTxt.getText(), trainingCombo.getSelectedItem().toString(), capacityTxt.getText(), InstructorTxt.getText(), coursedetilTxt.getText());
                   
                    courseIdTxt.setText("");
                     courseNameTxt.setText("");
                     capacityTxt.setText("");
                     InstructorTxt.setText("");
                     coursedetilTxt.setText("");
             
             
        }
         
        
    }//GEN-LAST:event_addBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField InstructorTxt;
    private javax.swing.JButton addBtn;
    private javax.swing.JTextField capacityTxt;
    private javax.swing.JTextField courseIdTxt;
    private javax.swing.JTextField courseNameTxt;
    private javax.swing.JTextArea coursedetilTxt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> trainingCombo;
    // End of variables declaration//GEN-END:variables
}
