package framePkg;
//import classPkg.ClientReport;
import classPkg_CC.StaffReport;
import java.io.File;
import java.util.ArrayList;
import java.util.Scanner;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class MonthlyStaffReportInfoFrame extends javax.swing.JInternalFrame {
DefaultTableModel model = null;
    /**
     * Creates new form MonthlyStaffReportFrame
     */
    public MonthlyStaffReportInfoFrame() {
        initComponents();

    }
public DefaultTableModel getV(){

return model;
};
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ChartTbl = new javax.swing.JTable();
        TypeComboBox = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        AddToCBTxtField = new javax.swing.JTextField();
        AddBtn = new javax.swing.JButton();
        generateReportBtn = new javax.swing.JButton();
        loadButton = new javax.swing.JButton();

        ChartTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Employee Name", "Employee ID", "Group Type", "Salary"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(ChartTbl);

        TypeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Staff", "Employee" }));

        jLabel1.setText("Select Type:");

        AddBtn.setText("Add to Select");
        AddBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBtnActionPerformed(evt);
            }
        });

        generateReportBtn.setText("Generate Report and PDF");
        generateReportBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateReportBtnActionPerformed(evt);
            }
        });

        loadButton.setText("Load");
        loadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(TypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(98, 98, 98)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(loadButton)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(AddToCBTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(56, 56, 56)
                                        .addComponent(AddBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(142, 142, 142)
                                .addComponent(generateReportBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 58, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(AddToCBTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(AddBtn))
                        .addGap(10, 10, 10)
                        .addComponent(loadButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(TypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(generateReportBtn)
                .addContainerGap(8, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generateReportBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateReportBtnActionPerformed
        // TODO add your handling code here:

 model=(DefaultTableModel) ChartTbl.getModel();
        ArrayList<String> arr=new ArrayList<String>();  
        for(int i=0;i<model.getRowCount();i++){
            String s="";
            for(int j=0;j<model.getColumnCount();j++)
            {
                s+=model.getValueAt(i, j);
                if(j<model.getColumnCount()-1)
                {
                    s+=",";
                }
            }
            arr.add(s);
        }
        StaffReport g=new StaffReport();
        JFreeChart x=g.generateChart(arr);
        StaffReportFrame F= new StaffReportFrame(x);
        F.setVisible(true);
        g.generatePDF(x);
        this.dispose(); 


    }//GEN-LAST:event_generateReportBtnActionPerformed

    private void AddBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBtnActionPerformed
        // TODO add your handling code here:
        String s=AddToCBTxtField.getText();
        TypeComboBox.addItem(s);
        AddToCBTxtField.setText("");
    }//GEN-LAST:event_AddBtnActionPerformed

    private void loadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadButtonActionPerformed
        // TODO add your handling code here
        if(TypeComboBox.getSelectedItem().equals("Employee") || TypeComboBox.getSelectedItem().equals("employee") )
        { model =(DefaultTableModel) ChartTbl.getModel(); 
        model.getDataVector().removeAllElements();
        revalidate();
        File f= new File("Staff.txt");
        try 
        {
            Scanner s = new Scanner(f);
            String input;
            String [] staffDetails;
            String input2;
            String [] superviserDetails;
   
            while(s.hasNextLine()){
                input = s.nextLine();
                staffDetails= input.split(",");
                    model.addRow(new Object[]{staffDetails[1],staffDetails[0],staffDetails[11],staffDetails[8]});
                
            }
            f=new File("Superviser.txt");
            Scanner s2= new Scanner(f);
            while(s2.hasNextLine()){
                input2 = s2.nextLine();
                superviserDetails= input2.split(",");
                    model.addRow(new Object[]{superviserDetails[1],superviserDetails[0],superviserDetails[11],superviserDetails[8]});
                
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"Operation Denied", " Confiration Message", JOptionPane.WARNING_MESSAGE);
        }}
        else if(TypeComboBox.getSelectedItem().equals("Staff") || TypeComboBox.getSelectedItem().equals("staff"))
        {
             model =(DefaultTableModel) ChartTbl.getModel(); 
            model.getDataVector().removeAllElements();
            revalidate();
        File f= new File("Staff.txt");
        try 
        {
            Scanner s = new Scanner(f);
            String input;
            String [] staffDetails;
            
   
            while(s.hasNextLine()){
                input = s.nextLine();
                staffDetails= input.split(",");
                    model.addRow(new Object[]{staffDetails[1],staffDetails[0],staffDetails[11],staffDetails[8]});
                
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"Operation Denied", " Confiration Message", JOptionPane.WARNING_MESSAGE);
        }
        }
        else if(TypeComboBox.getSelectedItem().equals("Superviser") ||  TypeComboBox.getSelectedItem().equals("superviser"))
        {
            model =(DefaultTableModel) ChartTbl.getModel(); 
            model.getDataVector().removeAllElements();
            revalidate();
        File f= new File("Superviser.txt");
        try 
        {
            Scanner s = new Scanner(f);
           
            String input2;
            String [] superviserDetails;
   
            while(s.hasNextLine()){
                input2 = s.nextLine();
                superviserDetails= input2.split(",");
                    model.addRow(new Object[]{superviserDetails[1],superviserDetails[0],superviserDetails[11],superviserDetails[8]});
                
            }
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"Operation Denied", " Confiration Message", JOptionPane.WARNING_MESSAGE);
        }
        }
        
        
        
        
        
    }//GEN-LAST:event_loadButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AddBtn;
    private javax.swing.JTextField AddToCBTxtField;
    private javax.swing.JTable ChartTbl;
    private javax.swing.JComboBox<String> TypeComboBox;
    private javax.swing.JButton generateReportBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loadButton;
    // End of variables declaration//GEN-END:variables
}
