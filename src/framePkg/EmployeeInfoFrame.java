package framePkg;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author User
 */
public class EmployeeInfoFrame extends javax.swing.JFrame {
FileReader fr=null;
BufferedReader br = null;
FileReader fr_s=null;
BufferedReader br_s = null;
String s = null;
ArrayList<String> id = new ArrayList();
ArrayList<String> name = new ArrayList();
ArrayList<String> position = new ArrayList();
    /**
     * Creates new form EmployeeInfoFrame
     */
    public EmployeeInfoFrame() {
        initComponents();
      
        DynamicPanel3.setVisible(true);
      
        
    }
     public EmployeeInfoFrame(String name) {
       initComponents();
         if(name.equals("Admin")){
        load();
        selectPeopleBtn.setVisible(true);
      }
      else if(name.equals("Superviser")){
      loado();
      selectPeopleBtn.setVisible(false);
      }
        
    }
    
    
    
    private void load(){
     File f = new File("Staff.txt");
     File fs = new File("Superviser.txt");
        if(f.exists() && fs.exists()){             
            try {
                fr = new FileReader(f);
                br = new BufferedReader(fr);
                fr_s = new FileReader(fs);
                br_s = new BufferedReader(fr_s);
                
                
                while((s=br.readLine())!=null){
                    if(s.contains("Staff")){                      
                    String n = s;                    
                    String words[] = n.split(",");
                    employeeIDCombo.addItem(words[0]);
                    id.add(words[0]);
                    name.add(words[1]);
                    position.add(words[11]);                   
                    }                    
                                                                      
                }
                   while((s=br_s.readLine())!=null){
                                      
                    if(s.contains("Superviser")){                      
                    String n = s;
                    String words[] = n.split(",");
                    employeeIDCombo.addItem(words[0]);
                     id.add(words[0]);
                    name.add(words[1]);
                    position.add(words[11]);                    
                    }                                                      
                }
                
          

            } catch (FileNotFoundException ex) {
                Logger.getLogger(EmployeeInfoFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(EmployeeInfoFrame.class.getName()).log(Level.SEVERE, null, ex);
            }                      
        }
        
    
    
    
    };
  
    
     private void loado(){
     File f = new File("Staff.txt");
 
        if(f.exists()){             
            try {
                fr = new FileReader(f);
                br = new BufferedReader(fr);
               
                
                while((s=br.readLine())!=null){
                    if(s.contains("Staff")){                      
                    String n = s;                    
                    String words[] = n.split(",");
                    employeeIDCombo.addItem(words[0]);
                    id.add(words[0]);
                    name.add(words[1]);
                    position.add(words[11]);                   
                    }                    
                                                                      
                }
               
                
          

            } catch (FileNotFoundException ex) {
                Logger.getLogger(EmployeeInfoFrame.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(EmployeeInfoFrame.class.getName()).log(Level.SEVERE, null, ex);
            }                      
        }
        
    
    
    
    };
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField2 = new javax.swing.JTextField();
        DynamicPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        employeeTbl = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        EmployeeIDsearchTxtField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        employeeIDCombo = new javax.swing.JComboBox<>();
        SearchBtn = new javax.swing.JButton();
        selectBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        selectPeopleBtn = new javax.swing.JButton();

        jTextField2.setText("jTextField2");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        employeeTbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Employee Name", "Designation", "Can Apply For Training"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(employeeTbl);

        jLabel1.setText("Search By ID");

        jLabel3.setText("OR");

        jLabel4.setText("Choose By ID");

        SearchBtn.setText("Search");
        SearchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchBtnActionPerformed(evt);
            }
        });

        selectBtn.setText("Select");
        selectBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Employee Information");

        jLabel5.setText("----------------------------------------------------------------------------------");

        selectPeopleBtn.setText("Select people for Training ");
        selectPeopleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectPeopleBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DynamicPanel3Layout = new javax.swing.GroupLayout(DynamicPanel3);
        DynamicPanel3.setLayout(DynamicPanel3Layout);
        DynamicPanel3Layout.setHorizontalGroup(
            DynamicPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DynamicPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DynamicPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(DynamicPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(EmployeeIDsearchTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(SearchBtn)
                        .addGap(26, 26, 26)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(employeeIDCombo, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(selectBtn)
                        .addGap(0, 26, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(DynamicPanel3Layout.createSequentialGroup()
                .addGap(254, 254, 254)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DynamicPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(DynamicPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DynamicPanel3Layout.createSequentialGroup()
                        .addComponent(selectPeopleBtn)
                        .addGap(47, 47, 47))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DynamicPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 660, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15))))
        );
        DynamicPanel3Layout.setVerticalGroup(
            DynamicPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DynamicPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(2, 2, 2)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addGroup(DynamicPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(EmployeeIDsearchTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(SearchBtn)
                    .addComponent(jLabel4)
                    .addComponent(employeeIDCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(selectBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(46, 46, 46)
                .addComponent(selectPeopleBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(DynamicPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(DynamicPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void selectBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectBtnActionPerformed
        // TODO add your handling code here:
             DefaultTableModel m = new DefaultTableModel();
        m = (DefaultTableModel)employeeTbl.getModel();
     
        String s = employeeIDCombo.getSelectedItem().toString();
        int n = id.indexOf(s);
         m.addRow(new Object[]{s,name.get(n),position.get(n),false} );                    

    }//GEN-LAST:event_selectBtnActionPerformed

    private void SearchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchBtnActionPerformed
        // TODO add your handling code here:
           DefaultTableModel m = new DefaultTableModel();
        m = (DefaultTableModel)employeeTbl.getModel();
     int n =-1;
        String s = EmployeeIDsearchTxtField.getText();
        
         n = id.indexOf(s);
         if(n != -1){
         m.addRow(new Object[]{s,name.get(n),position.get(n),false} );}
         else{
          JOptionPane.showMessageDialog(null,"not found");

         }
    }//GEN-LAST:event_SearchBtnActionPerformed

    private void selectPeopleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectPeopleBtnActionPerformed
        // TODO add your handling code here:
        FileWriter fw = null;
    try {
        fw = new FileWriter("Trinable.txt",true);
    } catch (IOException ex) {
        Logger.getLogger(EmployeeInfoFrame.class.getName()).log(Level.SEVERE, null, ex);
    }
        BufferedWriter bw = new BufferedWriter(fw);
       //  DefaultTableModel model =(DefaultTableModel) employeeTbl.getModel(); 
    
        try{
                     DefaultTableModel model =(DefaultTableModel) employeeTbl.getModel(); 

         for(int i=0;i<model.getRowCount();i++){
            if(model.getValueAt(i, 3).equals(true)){
                for(int j=0;j<1;j++){
                        bw.append((String)model.getValueAt(i,j)+"\n");
                        
                        
                        
                }
           // bw.append("\n");
                   }
           
               
            }
        }
        catch(Exception e){}
        finally{
            try {
                bw.close();
            } catch (IOException ex) {
                Logger.getLogger(EmployeeInfoFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        
        }
        
        
        
    }//GEN-LAST:event_selectPeopleBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmployeeInfoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmployeeInfoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmployeeInfoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmployeeInfoFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmployeeInfoFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel DynamicPanel3;
    private javax.swing.JTextField EmployeeIDsearchTxtField;
    private javax.swing.JButton SearchBtn;
    private javax.swing.JComboBox<String> employeeIDCombo;
    private javax.swing.JTable employeeTbl;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JButton selectBtn;
    private javax.swing.JButton selectPeopleBtn;
    // End of variables declaration//GEN-END:variables
}
